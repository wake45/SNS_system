{{!-- chat.hbs --}}
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>채팅</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(to right, #2c3e50, #4ca1af);
      margin: 0;
      padding: 0;
      color: #fff;
    }

    .chat-container {
      width: 80%;
      max-width: 700px;
      margin: 50px auto;
      background-color: white;
      color: black;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
      overflow: hidden;
    }

    .chat-header {
      display: flex;
      align-items: center;
      padding: 15px;
      border-bottom: 1px solid #ddd;
    }

    .profile-img {
      width: 50px;
      height: 50px;
      background-color: #3498db;
      border-radius: 50%;
      margin-right: 10px;
    }

    .chat-body {
      padding: 20px;
      height: 300px;
      overflow-y: auto;
      background-color: #f9f9f9;
    }

    .message {
      max-width: 60%;
      padding: 10px 15px;
      margin: 10px 0;
      border-radius: 15px;
      font-size: 14px;
      line-height: 1.4;
    }

    .sent {
      background-color: #3498db;
      color: white;
      margin-left: auto;
    }

    .received {
      background-color: #e0e0e0;
      color: black;
    }

    .chat-footer {
      display: flex;
      padding: 15px;
      border-top: 1px solid #ddd;
      gap: 10px;
    }

    .chat-footer input[type="text"] {
      flex-grow: 1;
      padding: 10px;
      border-radius: 5px;
      border: 1px solid #ccc;
    }

    .chat-footer button {
      padding: 10px 15px;
      border: none;
      border-radius: 5px;
      background-color: #2c3e50;
      color: white;
      cursor: pointer;
      transition: background-color 0.2s ease;
    }

    .chat-footer button:hover {
      background-color: #1a252f;
    }

    .profile-img-wrapper {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      overflow: hidden;
      border: 2px solid #3498db;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .profile-img-wrapper:hover {
      transform: scale(1.1);
      box-shadow: 0 0 8px rgba(52, 152, 219, 0.8);
    }

    .profile-img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  </style>
</head>
<body>
  <div class="chat-container">
    <div class="chat-header">
      <div class="profile-img-wrapper">
        <img
          src="{{partner.profile.profile_picture}}"
          alt="프로필 사진"
          class="profile-img"
        />
      </div>
      <div style="margin-left:8px"><strong>{{partner.profile.name}}</strong></div>
    </div>
    <div class="chat-body" id="chat-body">
      {{#each messages}}
        <div class="message {{#if isSent}}sent{{else}}received{{/if}}">
          {{this.message}}
        </div>
      {{/each}}
    </div>
    <div class="chat-footer">
      <input type="text" id="chat-input" placeholder="메시지를 입력하세요...">
      <button onclick="sendMessage()">전송</button>
      <button onclick="goBack()">뒤로가기</button>
    </div>
  </div>

  <script>
    let chatId = {{{chatId}}}
    let myId = '{{myId}}';

    async function sendMessage() {
      const input = document.getElementById('chat-input');
      const message = input.value.trim();
      if (!message) return;

      const res = await fetch(`/chats/${chatId}/messages`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ message })
      });

      if (res.ok) {
        input.value = ''; // 입력 필드 비우기
        input.focus();    // 입력 필드에 포커스 유지
        // 메시지를 화면에 추가하는 함수 호출
        const newMessage = await res.json();
        appendMessage(newMessage.messages[newMessage.messages.length-1]);
      } else {
        console.error('메시지 전송 실패');
      }
    } 

    function appendMessage(message) {
      console.log(message);
      const chatBody = document.getElementById('chat-body');
      const messageDiv = document.createElement('div');
      messageDiv.className = 'message sent';
      messageDiv.textContent = message.message;
      chatBody.appendChild(messageDiv);
      chatBody.scrollTop = chatBody.scrollHeight; // 스크롤을 가장 아래로 이동
    }

    function goBack() {
      window.history.back();
    }
  </script>
</body>
</html>
